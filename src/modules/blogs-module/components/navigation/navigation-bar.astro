---
import { routes } from "../../router/routes";
---

<md-navigation-bar
    transition:persist="bottom-app-bar"
    class="bottom-app-bar"
    id="bottom-app-bar-standalone-root"
>
    {
        routes.map((link) => (
            <md-navigation-tab
                data-href={`${link.url}`}
                label={link.label}
                class="bottom-app-tab"
            >
                <md-icon class="inactive-icon" slot="inactive-icon">
                    {link.iconString}
                </md-icon>
                <md-icon class="active-icon" slot="active-icon">
                    {link.iconString}
                </md-icon>
            </md-navigation-tab>
        ))
    }
</md-navigation-bar>

<script>
    import "@material/web/icon/icon";
    import "@material/web/labs/navigationbar/navigation-bar";
    import "@material/web/labs/navigationtab/navigation-tab";
</script>

<script>
    import type { MdRipple } from "@material/web/all";
    import type { MdNavigationBar } from "@material/web/labs/navigationbar/navigation-bar";
    import type { MdNavigationTab } from "@material/web/labs/navigationtab/navigation-tab";
    import { currentRouteUrl } from "@modules/blogs-module/router/routes";
    import { navigate } from "astro:transitions/client";

    const bar = () =>
        document.querySelector<MdNavigationBar & HTMLElement>(
            "#bottom-app-bar-standalone-root",
        );

    const initRipple = () => {
        const ripplHosts = bar().querySelectorAll(".bottom-app-tab")!;

        ripplHosts.forEach((host) => {
            const ripple = host.shadowRoot!.querySelector<
                MdRipple & HTMLElement
            >(".md3-navigation-tab__ripple");
            ripple.style.setProperty("inset", "unset");
            ripple.style.setProperty("border-radius", "9999px");
            ripple.style.setProperty("height", "128px");
            ripple.style.setProperty("width", "128px");
            ripple.attach(host as HTMLElement);
        });
    };
    const createTabNavigateEvent = () => {
        bar().tabs.forEach((tab: MdNavigationTab & HTMLElement) => {
            tab.addEventListener("click", (_) => {
                navigate(tab.getAttribute("data-href")!);
                currentRouteUrl.set(tab.getAttribute("data-href")!);
            });
        });
    };

    window.addEventListener("DOMContentLoaded", () => {
        initRipple();
        createTabNavigateEvent();
    });

    currentRouteUrl.subscribe((value) => {
        if (!bar().tabs) {
            return;
        }

        bar().tabs.forEach((tab: MdNavigationTab & HTMLElement) => {
            if (tab.getAttribute("data-href") === value) {
                bar().activeIndex = bar().tabs.findIndex((e) => e === tab);
            }
        });
    });
</script>

<style is:global>
    .bottom-app-bar {
        --md-navigation-bar-container-elevation: 0;

        overflow: hidden;

        & .active-icon {
            font-variation-settings:
                "FILL" 1,
                "wght" 400,
                "GRAD" 0,
                "opsz" 24;
        }
    }
</style>
